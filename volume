#!/bin/sh

action=$1

case $action in
    "up")
        wpctl set-volume @DEFAULT_SINK@ 3%+
        ;;
    "down")
        wpctl set-volume @DEFAULT_SINK@ 3%-
        ;;
    "toggle")
        wpctl set-mute @DEFAULT_SINK@ toggle
        ;;
    "mic")
        # TODO for pipewire
        # for pulseaudio with pamixer:
        #
        # pamixer --default-source -t
        # [[ "$(pamixer --default-source --get-mute)" == "true" ]] &&
        #     notify-send -t 1000 "Microphone off" ||
        #     notify-send -t 1000 "Microphone on"
        # exit
        ;;
esac

volume=`wpctl get-volume @DEFAULT_SINK@ | tr ' ' '\n' | grep "[0-9]\.[0-9]"`
volume_percent=`echo $volume | sed 's/\.//' | sed 's/^0*\(.\)/\1/'`

point_volume=`echo $volume | cut -d '.' -f 2`
if [ $point_volume -eq 0 ] && [ $volume_percent -ne 0 ]; then
    point_volume=100
fi

description="`wpctl inspect @DEFAULT_SINK@ | grep node.description | cut -d '"' -f 2` â€“ $volume_percent%"
muted=`wpctl get-volume @DEFAULT_SINK@ | grep muted -io | tr '[:upper:]' '[:lower:]'`

if [[ $muted == 'muted' ]]; then
    notify-send -t 1000 -h int:value:"$point_volume" "Volume (muted)" "$description" -a "Volume script"
else
    notify-send -t 1000 -h int:value:"$point_volume" "Volume" "$description" -a "Volume script"
fi
